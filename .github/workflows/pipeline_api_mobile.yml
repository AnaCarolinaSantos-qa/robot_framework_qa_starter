name: CI — API & Mobile (Robot Framework)

on:
  pull_request:
    branches: ["**"]
  push:
    branches: ["main"]
  schedule:
    - cron: "0 5 * * *"
  workflow_dispatch:
    inputs:
      ref:
        description: "Branch ou tag a executar (ex.: feature/minha-branch, v1.0.0)"
        required: false
        default: ""

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: "3.11"
  RESULTS_DIR: "results"
  RF_TAGS: ${{ github.event_name == 'pull_request' && 'smoke' || 'regression' }}

jobs:
  api:
    name: API
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          # Se disparado manualmente (workflow_dispatch) e informado 'ref', usa-o; senão usa o ref do evento
          ref: ${{ inputs.ref != '' && inputs.ref || github.ref }}
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip
          cache-dependency-path: requirements.txt
      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Executar testes de API
        run: |
          mkdir -p "${RESULTS_DIR}/api"
          PATHS=""
          if compgen -G "tests/api/*.robot" > /dev/null; then
            PATHS="${PATHS} tests/api"
          fi
          if compgen -G "tests/API_tests/*.robot" > /dev/null; then
            PATHS="${PATHS} tests/API_tests"
          fi
          if [ -n "${PATHS}" ]; then
            robot -d "${RESULTS_DIR}/api" -i api ${PATHS}
          else
            echo "Nenhuma suíte encontrada em tests/api/*.robot ou tests/API_tests/*.robot; pulando API."
          fi
      - name: Artefatos (API)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-${{ github.run_id }}
          path: ${{ env.RESULTS_DIR }}/api/**

  mobile:
    name: Mobile (fake)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref != '' && inputs.ref || github.ref }}
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip
          cache-dependency-path: requirements.txt
      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Executar testes Mobile (fake)
        run: |
          mkdir -p "${RESULTS_DIR}/mobile"
          if compgen -G "tests/mobile/*.robot" > /dev/null; then
            robot -d "${RESULTS_DIR}/mobile" -i mobile tests/mobile
          else
            echo "tests/mobile/*.robot não encontrado; pulando Mobile."
          fi
      - name: Artefatos (Mobile)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mobile-${{ github.run_id }}
          path: ${{ env.RESULTS_DIR }}/mobile/**

  resumo:
    name: Resumo & Artefatos Finais
    runs-on: ubuntu-latest
    needs: [api, mobile]
    if: always()
    steps:
      - name: Baixar artefatos (API)
        uses: actions/download-artifact@v4
        with:
          name: api-${{ github.run_id }}
          path: collected/api
        continue-on-error: true

      - name: Baixar artefatos (Mobile)
        uses: actions/download-artifact@v4
        with:
          name: mobile-${{ github.run_id }}
          path: collected/mobile
        continue-on-error: true

      - name: Re-publicar artefatos finais (API)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-final-${{ github.run_id }}
          path: collected/api/**
          if-no-files-found: warn

      - name: Re-publicar artefatos finais (Mobile)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mobile-final-${{ github.run_id }}
          path: collected/mobile/**
          if-no-files-found: warn

      - name: Step Summary
        run: |
          echo "## Resumo do Pipeline" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Resultado |" >> $GITHUB_STEP_SUMMARY
          echo "|---|---|" >> $GITHUB_STEP_SUMMARY
          echo "| API | ${{ needs.api.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Mobile | ${{ needs.mobile.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Artefatos finais publicados: **api-final-${{ github.run_id }}**, **mobile-final-${{ github.run_id }}**." >> $GITHUB_STEP_SUMMARY
