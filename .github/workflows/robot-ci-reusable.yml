name: Reusable Robot Test Pipeline

on:
  workflow_call:
    inputs:
      run_api:
        description: Executar testes de API?
        type: boolean
        default: true
      run_mobile:
        description: Executar testes Mobile (Appium)?
        type: boolean
        default: false
      python_version:
        description: Vers√£o do Python
        type: string
        default: "3.11"
      requirements_path:
        description: Caminho do requirements.txt
        type: string
        default: "requirements.txt"
      api_tests_path:
        description: Pasta das suites de API
        type: string
        default: "tests/api"
      mobile_tests_path:
        description: Pasta das suites Mobile
        type: string
        default: "tests/mobile"
      extra_robot_args:
        description: Args extras para o Robot (ex.: --variable ENV:qa)
        type: string
        default: ""
      email_to:
        description: E-mails de destino (separados por v√≠rgula)
        type: string
        default: ""
      email_subject:
        description: Assunto do e-mail
        type: string
        default: "Relat√≥rio de Testes - Robot"
      suite_name:
        description: Nome amig√°vel da execu√ß√£o
        type: string
        default: "Testes Automatizados"
    secrets:
      SMTP_SERVER:
        required: false
      SMTP_PORT:
        required: false
      SMTP_USERNAME:
        required: false
      SMTP_PASSWORD:
        required: false
      EMAIL_FROM:
        required: false
      APPIUM_SERVER_URL:
        required: false
      APPIUM_CAPS_JSON:
        required: false

jobs:
  prepare:
    name: Preparar ambiente
    runs-on: ubuntu-latest
    outputs:
      has_api: ${{ inputs.run_api }}
      has_mobile: ${{ inputs.run_mobile }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles(inputs.requirements_path) }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Instalar depend√™ncias
        run: |
          python -m pip install --upgrade pip
          pip install -r "${{ inputs.requirements_path }}"

      - name: Sum√°rio inicial
        run: |
          {
            echo "## üöÄ Execu√ß√£o de Testes"
            echo ""
            echo "- Suite: **${{ inputs.suite_name }}**"
            echo "- API: **${{ inputs.run_api }}** | Mobile: **${{ inputs.run_mobile }}**"
          } >> $GITHUB_STEP_SUMMARY

  api:
    name: API Tests
    needs: prepare
    if: ${{ needs.prepare.outputs.has_api == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles(inputs.requirements_path) }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Instalar depend√™ncias
        run: |
          python -m pip install --upgrade pip
          pip install -r "${{ inputs.requirements_path }}"

      - name: Rodar testes de API (Robot)
        run: |
          mkdir -p reports/api
          robot -d reports/api -N "${{ inputs.suite_name }} - API" ${{ inputs.extra_robot_args }} "${{ inputs.api_tests_path }}"

      - name: Artefatos API
        uses: actions/upload-artifact@v4
        with:
          name: robot-api-reports
          path: |
            reports/api/output.xml
            reports/api/log.html
            reports/api/report.html
          retention-days: 7

  mobile:
    name: Mobile Tests (Appium)
    needs: prepare
    if: ${{ needs.prepare.outputs.has_mobile == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles(inputs.requirements_path) }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Preparar vari√°veis do Appium
        shell: bash
        run: |
          echo "APPIUM_SERVER_URL=${{ secrets.APPIUM_SERVER_URL }}" >> $GITHUB_ENV
          echo "APPIUM_CAPS_JSON=${{ secrets.APPIUM_CAPS_JSON }}" >> $GITHUB_ENV

      - name: Rodar testes Mobile (Robot + Appium)
        env:
          APPIUM_SERVER_URL: ${{ env.APPIUM_SERVER_URL }}
          APPIUM_CAPS_JSON: ${{ env.APPIUM_CAPS_JSON }}
        run: |
          mkdir -p reports/mobile
          robot -d reports/mobile -N "${{ inputs.suite_name }} - Mobile" \
            --variable APPIUM_SERVER_URL:$APPIUM_SERVER_URL \
            --variable APPIUM_CAPS_JSON:$APPIUM_CAPS_JSON \
            ${{ inputs.extra_robot_args }} "${{ inputs.mobile_tests_path }}"

      - name: Artefatos Mobile
        uses: actions/upload-artifact@v4
        with:
          name: robot-mobile-reports
          path: |
            reports/mobile/output.xml
            reports/mobile/log.html
            reports/mobile/report.html
          retention-days: 7

  merge-and-summary:
    name: Consolidar & Resumo
    needs: [prepare, api, mobile]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/checkout@v4

      - name: Baixar artefatos
        uses: actions/download-artifact@v4
        with:
          path: reports_all
        continue-on-error: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}

      - name: Instalar Robot (rebot)
        run: |
          python -m pip install --upgrade pip
          pip install robotframework==7.0

      - name: Mesclar outputs (se houver)
        run: |
          mkdir -p summary
          files=$(find reports_all -name "output.xml" | tr '\n' ' ')
          if [ -z "$files" ]; then
            echo "Nenhum output.xml encontrado. Pulando merge."
          else
            rebot --merge $files -o summary/output.xml -l summary/log.html -r summary/report.html -N "${{ inputs.suite_name }}"
          fi

      - name: Gerar RESUMO
        shell: bash
        run: |
          python - << 'PY'
import xml.etree.ElementTree as ET, os, datetime
p = "summary/output.xml"
passed=failed=0
start=end=None
if os.path.exists(p):
    t = ET.parse(p); root=t.getroot()
    for s in root.findall(".//statistics/total/stat"):
        if s.get("label")=="All Tests":
            passed=int(s.get("pass")); failed=int(s.get("fail"))
    sattr=root.find(".//suite").get("starttime")
    eattr=root.find(".//suite").get("endtime")
    def parse(ts): return datetime.datetime.strptime(ts, "%Y%m%d %H%M%S.%f")
    try: start=parse(sattr); end=parse(eattr)
    except Exception: pass
with open(os.environ["GITHUB_STEP_SUMMARY"], "a") as f:
    f.write("### üìä Resultado consolidado\n\n")
    if start and end: f.write(f"- Dura√ß√£o: **{(end-start)}**\n")
    f.write(f"- Passaram: **{passed}**\n- Falharam: **{failed}**\n\n")
    f.write("> üî¥ H√° falhas. Consulte os relat√≥rios anexados.\n" if failed>0 else "> üü¢ Sem falhas.\n")
PY

      - name: Artefatos Consolidados
        uses: actions/upload-artifact@v4
        with:
          name: robot-merged-reports
          path: |
            summary/output.xml
            summary/log.html
            summary/report.html
          retention-days: 14

      - name: Zip para e-mail
        run: |
          cd summary || { mkdir -p summary && cd summary; }
          zip -r ../robot_reports.zip . || true
          cd ..

      - name: Enviar e-mail (opcional)
        if: ${{ inputs.email_to != '' && secrets.SMTP_SERVER != '' && secrets.EMAIL_FROM != '' }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: ${{ inputs.email_subject }}
          from: ${{ secrets.EMAIL_FROM }}
          to: ${{ inputs.email_to }}
          secure: true
          html_body: |
            <h3>${{ inputs.suite_name }}</h3>
            <p>Relat√≥rios em anexo e artefatos nesta execu√ß√£o do GitHub Actions.</p>
            <ul>
              <li><a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}">Ver execu√ß√£o</a></li>
            </ul>
          attachments: |
            summary/report.html
            summary/log.html
            robot_reports.zip
